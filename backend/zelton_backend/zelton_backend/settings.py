"""
Django settings for zelton_backend project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default="django-insecure-0d&8slnl6z&06&h(m(1d(2467_qk@+c)m0a0d5lo9=%b6_2-8%")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

ALLOWED_HOSTS = ['*']

# Domain configuration for absolute URLs
USE_TZ = True
TIME_ZONE = 'UTC'

# CORS settings
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20
}

# CSRF settings for API
CSRF_TRUSTED_ORIGINS = [
    'http://localhost:3000',
    'http://127.0.0.1:3000',
    'http://192.168.1.36:8000',
    'http://localhost:8000',
    'http://127.0.0.1:8000',
    'https://api.zelton.in',
    'http://api.zelton.in',
]

# SSL Security Settings (for production with HTTPS)
# Only enable SSL redirects in production
SECURE_SSL_REDIRECT = not DEBUG
SESSION_COOKIE_SECURE = not DEBUG
CSRF_COOKIE_SECURE = not DEBUG
SECURE_HSTS_SECONDS = 31536000 if not DEBUG else 0
SECURE_HSTS_INCLUDE_SUBDOMAINS = not DEBUG
SECURE_HSTS_PRELOAD = not DEBUG
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# CSRF settings for API
CSRF_COOKIE_HTTPONLY = False
CSRF_USE_SESSIONS = False
CSRF_COOKIE_AGE = None
CSRF_TRUSTED_ORIGINS = [
    'http://localhost:3000',
    'http://127.0.0.1:3000',
    'http://192.168.1.36:8000',
    'http://localhost:8000',
    'http://127.0.0.1:8000',
    'http://192.168.1.36:3000',
    'http://192.168.1.36:19000',
    'http://192.168.1.36:19001',
    'http://192.168.1.36:19002',
    'http://192.168.1.36:19006',
    'https://api.zelton.in',
    'http://api.zelton.in',
]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework.authtoken",
    "corsheaders",
    "core",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "core.middleware.DisableCSRFMiddleware",  # Custom middleware to disable CSRF for API
    # "django.middleware.csrf.CsrfViewMiddleware",  # Disabled for API
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "zelton_backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "zelton_backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "zelton_db",
        "USER": "zelton_user",
        "PASSWORD": "Zelton@12345",
        "HOST": "localhost",
        "PORT": "5432",
        'CONN_MAX_AGE': 600,  # Connection pooling
        'OPTIONS': {
            'options': '-c search_path=zelton_schema,public'
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "assets/"
STATIC_ROOT = BASE_DIR / "staticfiles"

# Media files (User uploaded files)
MEDIA_URL = "/media/"
MEDIA_ROOT = "/ZeltonLivings/dbdata/media"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# PhonePe Configuration
PHONEPE_CLIENT_ID = config('PHONEPE_CLIENT_ID')
PHONEPE_CLIENT_SECRET = config('PHONEPE_CLIENT_SECRET')
PHONEPE_CLIENT_VERSION = config('PHONEPE_CLIENT_VERSION', default=1, cast=int)
PHONEPE_ENVIRONMENT = config('PHONEPE_ENVIRONMENT', default='SANDBOX')
PHONEPE_WEBHOOK_USERNAME = config('PHONEPE_WEBHOOK_USERNAME')
PHONEPE_WEBHOOK_PASSWORD = config('PHONEPE_WEBHOOK_PASSWORD')
PHONEPE_REDIRECT_BASE_URL = config('PHONEPE_REDIRECT_BASE_URL', default='http://api.zelton.in')

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': '/ZeltonLivings/dbdata/logs/django.log',
            'formatter': 'verbose',
        },
        'phonepe_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': '/ZeltonLivings/dbdata/logs/phonepe.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'core.services.phonepe_service': {
            'handlers': ['phonepe_file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'core.views': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# Create logs directory if it doesn't exist
import os
logs_dir = '/ZeltonLivings/dbdata/logs'
os.makedirs(logs_dir, exist_ok=True)

# Email Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Gmail SMTP server
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'mohammadyusha90@gmail.com'  # Your Gmail
EMAIL_HOST_PASSWORD = 'jydf pabp xfnt ixdg'  # Your Gmail app password
DEFAULT_FROM_EMAIL = 'mohammadyusha90@gmail.com'  # Use same email as sender
EMAIL_USE_SSL = False  # Use TLS instead of SSL
EMAIL_TIMEOUT = 30  # Add timeout

# For development/testing, you can use console backend instead:
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Alternative: Use console backend for testing (uncomment the line below)
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Media files (for file uploads) - Updated to use new directory
MEDIA_URL = '/media/'
MEDIA_ROOT = '/ZeltonLivings/dbdata/media'

# Domain configuration for absolute URLs
# This ensures that build_absolute_uri() uses the correct domain
if DEBUG:
    # For development with dev tunnels
    BASE_URL = 'https://api.zelton.in'
else:
    # For production
    BASE_URL = 'https://api.zelton.in'

# Session configuration for OTP storage
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 600  # 10 minutes (same as OTP expiry)
SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_SAMESITE = 'Lax'  # Allow cross-origin requests
SESSION_COOKIE_SECURE = not DEBUG  # Set to True in production with HTTPS
