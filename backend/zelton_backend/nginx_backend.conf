# Nginx configuration for Zelton Backend Production
# This configures the backend to be accessible at zelton.in/backend

events {
    worker_connections 1024;
}

http {
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/s;

    # Upstream for Gunicorn
    upstream zelton_backend {
        server 127.0.0.1:8000;
        # Add more servers for load balancing if needed
        # server 127.0.0.1:8001;
        # server 127.0.0.1:8002;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name zelton.in www.zelton.in;
        
        # Redirect all HTTP requests to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # Main HTTPS server block
    server {
        listen 443 ssl http2;
        server_name zelton.in www.zelton.in;
        
        # SSL Configuration
        ssl_certificate /etc/ssl/certs/zelton.crt;
        ssl_certificate_key /etc/ssl/private/zelton.key;
        
        # SSL Security Settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'self';" always;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        # Client settings
        client_max_body_size 20M;
        client_body_timeout 60s;
        client_header_timeout 60s;
        
        # Backend static files (served directly by Nginx)
        location /backend/static/ {
            alias /ZeltonLivings/appsdata/backend/zelton_backend/staticfiles/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # Backend media files (served directly by Nginx)
        location /backend/media/ {
            alias /ZeltonLivings/dbdata/media/;
            expires 1M;
            add_header Cache-Control "public";
            access_log off;
        }
        
        # Backend API endpoints with rate limiting
        location /backend/api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://zelton_backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
        
        # Backend authentication endpoints with stricter rate limiting
        location /backend/api/auth/ {
            limit_req zone=login burst=10 nodelay;
            
            proxy_pass http://zelton_backend/api/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Backend payment webhooks (no rate limiting for PhonePe)
        location /backend/api/webhooks/ {
            proxy_pass http://zelton_backend/api/webhooks/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Backend health check endpoint
        location /backend/health/ {
            proxy_pass http://zelton_backend/health/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            access_log off;
        }
        
        # Backend admin interface
        location /backend/admin/ {
            proxy_pass http://zelton_backend/admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Additional security for admin
            allow 192.168.1.0/24;  # Allow only from internal network
            allow 10.0.0.0/8;      # Allow only from internal network
            deny all;
        }
        
        # All other backend requests
        location /backend/ {
            proxy_pass http://zelton_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Frontend website (your Vercel deployment)
        # This will handle all other requests and forward them to your frontend
        location / {
            # For now, return a simple message
            # In production, you might want to proxy to your Vercel deployment
            return 200 "Frontend website should be handled by your Vercel deployment";
            add_header Content-Type text/plain;
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
        
        # Logging
        access_log /var/log/nginx/zelton_access.log;
        error_log /var/log/nginx/zelton_error.log;
    }

    # Additional server block for API subdomain (optional)
    server {
        listen 443 ssl http2;
        server_name api.zelton.in;
        
        # SSL Configuration (same as above)
        ssl_certificate /etc/ssl/certs/zelton.crt;
        ssl_certificate_key /etc/ssl/private/zelton.key;
        
        # Same SSL settings as main server
        
        # API-only configuration - direct access to backend
        location / {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://zelton_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Logging
        access_log /var/log/nginx/api_access.log;
        error_log /var/log/nginx/api_error.log;
    }
}













